{"ast":null,"code":"import _defineProperty from \"/Users/jimmybui/Documents/Web&App/example/my_react_login/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jimmybui/Documents/Web&App/example/my_react_login/frontend/src/components/signIn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Error from './error';\nimport Popup from './popup';\nimport Loading from './loading';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { URL } from '../constants/constant';\nimport { validEmail } from '../js/utils.js';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submitted: false,\n      email: \"\",\n      password: \"\",\n      error: null,\n      isLogged: false\n    };\n    this.handleLogIn = this.handleLogIn.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleLogIn(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    }); // Check empty input\n\n    if (this.state.email && this.state.password) {\n      // Check validation of the email\n      if (!validEmail(this.state.email)) {\n        this.setState({\n          error: _objectSpread({}, {\n            message: \"Email is invalid\"\n          })\n        });\n        return false;\n      }\n\n      this.refs.loading.handleLoading(); // Assume the request will be a half of second\n\n      setTimeout(() => {\n        // Get the list of user\n        axios.get(URL + '/users').then(resp => {\n          const list = resp.data; // Find the user with email\n\n          const user = list.find(x => x.email == this.state.email); // Check the user exist\n\n          if (user != null) {\n            // Check the password\n            if (user.password == this.state.password) {\n              this.setState({\n                user: user,\n                error: null,\n                email: \"\",\n                password: \"\",\n                submitted: false,\n                isLogged: true\n              });\n              this.refs.loading.handleLoading(); // Open message box\n\n              this.refs.popup.handlePopup();\n            } else {\n              this.setState({\n                error: _objectSpread({}, {\n                  message: \"Password is incorrect\"\n                })\n              });\n              this.refs.loading.handleLoading();\n            }\n          } else {\n            this.setState({\n              error: _objectSpread({}, {\n                message: \"Email doesn't exist\"\n              })\n            });\n            this.refs.loading.handleLoading();\n          }\n        }).catch(error => {\n          // Catch error here\n          this.setState({\n            error: error\n          });\n          this.refs.loading.handleLoading();\n        });\n      }, 500);\n    }\n  }\n\n  handleChange(e) {\n    switch (e.target.id) {\n      case 'email':\n        this.setState({\n          email: e.target.value\n        });\n        break;\n\n      case 'password':\n        this.setState({\n          password: e.target.value\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          submitted = _this$state.submitted,\n          email = _this$state.email,\n          password = _this$state.password,\n          error = _this$state.error;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleLogIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"input\", {\n      id: \"email\",\n      value: email,\n      type: \"text\",\n      onChange: this.handleChange,\n      placeholder: \"Email\",\n      className: submitted && !email ? \"form-control is-invalid\" : \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"alert-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, submitted && !email && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Email is required\"))), React.createElement(\"div\", {\n      className: \"div-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      id: \"password\",\n      value: password,\n      type: \"password\",\n      onChange: this.handleChange,\n      placeholder: \"Password\",\n      className: submitted && !password ? \"form-control is-invalid\" : \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"alert-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, submitted && !password && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Password is required\"))), React.createElement(\"div\", {\n      className: \"div-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/resetPassword\",\n      className: \"customLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Want to reset password ?\")), React.createElement(\"div\", {\n      className: \"alert-box div-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, error != null && error.message != null && React.createElement(Error, {\n      message: error.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"div-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-secondary btn-big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Log In\")))), React.createElement(Popup, {\n      ref: \"popup\",\n      message: \"Logged In\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Loading, {\n      ref: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/jimmybui/Documents/Web&App/example/my_react_login/frontend/src/components/signIn.js"],"names":["React","Component","Error","Popup","Loading","axios","Link","URL","validEmail","SignIn","constructor","props","state","submitted","email","password","error","isLogged","handleLogIn","bind","handleChange","e","preventDefault","setState","message","refs","loading","handleLoading","setTimeout","get","then","resp","list","data","user","find","x","popup","handlePopup","catch","target","id","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Error from './error';\nimport Popup from './popup';\nimport Loading from './loading';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { URL } from '../constants/constant';\nimport { validEmail } from '../js/utils.js'\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            submitted: false,\n            email: \"\",\n            password: \"\",\n            error: null,\n            isLogged: false\n        }\n        this.handleLogIn = this.handleLogIn.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleLogIn(e) {\n        e.preventDefault();\n        this.setState({\n            submitted: true\n        })\n\n        // Check empty input\n        if(this.state.email && this.state.password) {\n            // Check validation of the email\n            if(!validEmail(this.state.email)) {\n                this.setState({\n                    error : {...{message: \"Email is invalid\"}}\n                });\n                return false;\n            }\n\n            this.refs.loading.handleLoading();\n            // Assume the request will be a half of second\n            setTimeout(() => {\n                // Get the list of user\n                axios.get(URL + '/users')\n                .then(resp => {\n                    const list = resp.data;\n                    // Find the user with email\n                    const user = list.find(x => x.email == this.state.email);\n                    // Check the user exist\n                    if(user != null) {\n                        // Check the password\n                        if(user.password == this.state.password) {\n                            this.setState({\n                                user : user,\n                                error : null,\n                                email : \"\",\n                                password : \"\",\n                                submitted : false,\n                                isLogged: true\n                            });\n                            this.refs.loading.handleLoading();\n                            // Open message box\n                            this.refs.popup.handlePopup();\n                        } else {\n                            this.setState({\n                                error : {...{message: \"Password is incorrect\"}}\n                            });\n                            this.refs.loading.handleLoading();\n                        }\n                    } else {\n                        this.setState({\n                            error : {...{message: \"Email doesn't exist\"}}\n                        });\n                        this.refs.loading.handleLoading();\n                    }\n                }).catch(error => {\n                    // Catch error here\n                    this.setState({\n                        error : error\n                    });\n                    this.refs.loading.handleLoading();\n                });\n            }, 500);\n        }\n    }\n\n    handleChange(e) {\n        switch(e.target.id) {\n            case 'email': this.setState({\n                email: e.target.value\n            });\n            break;\n            case 'password': this.setState({\n                password: e.target.value\n            });\n            break;\n            default: break;\n        }\n    }\n\n    render() {\n        const { submitted, email, password, error } = this.state;\n        return (\n            <div className=\"container\">\n                <div className=\"login\">\n                    <h1>Sign In</h1>\n                    <br/>\n                    <form onSubmit={this.handleLogIn}>\n                        <div className=\"div-responsive\">\n                            <label htmlFor=\"email\">Email:</label>\n                            <input id=\"email\" value={email} type=\"text\" onChange={this.handleChange} placeholder=\"Email\" className={(submitted && !email) ? \"form-control is-invalid\" : \"form-control\"} />\n                            <div className=\"alert-field\">\n                                {\n                                    (submitted && !email) && <div className=\"invalid-feedback\">Email is required</div>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"div-responsive\">\n                            <label htmlFor=\"password\">Password:</label>\n                            <input id=\"password\" value={password} type=\"password\" onChange={this.handleChange} placeholder=\"Password\" className={(submitted && !password) ? \"form-control is-invalid\" : \"form-control\"} />\n                            <div className=\"alert-field\">\n                                {\n                                    (submitted && !password) && <div className=\"invalid-feedback\">Password is required</div>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"div-responsive\">\n                            <Link to=\"/resetPassword\" className=\"customLink\">Want to reset password ?</Link>\n                        </div>\n                        <div className=\"alert-box div-responsive\">\n                            {\n                                (error != null && error.message != null) && <Error message={error.message} />\n                            }\n                        </div>\n                        <div className=\"div-responsive\">\n                            <button type=\"submit\" className=\"btn btn-secondary btn-big\">Log In</button>\n                        </div>\n                    </form>\n                </div>\n                <Popup ref=\"popup\" message=\"Logged In\" />\n                <Loading ref=\"loading\" />\n            </div>\n        )\n    }\n}\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}