{"ast":null,"code":"import _defineProperty from \"/Users/jimmybui/Documents/Web&App/example/my_react_login/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jimmybui/Documents/Web&App/example/my_react_login/frontend/src/components/resetPassword.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Error from './error';\nimport Popup from './popup';\nimport Loading from './loading';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { URL } from '../constants/constant';\nimport { validEmail } from '../js/utils.js';\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submitted: false,\n      email: \"\",\n      newPass: \"\",\n      cfPass: \"\",\n      error: null\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    }); // Check empty input\n\n    if (this.state.email && this.state.newPass && this.state.cfPass) {\n      // Check validation of the email\n      if (!validEmail(this.state.email)) {\n        this.setState({\n          error: _objectSpread({}, {\n            message: \"Email is invalid\"\n          })\n        });\n        return false;\n      }\n\n      this.refs.loading.handleLoading(); // Assume the request will be a half of second\n\n      setTimeout(() => {\n        // Get the list of user\n        axios.get(URL + '/users').then(resp => {\n          // Get the list of users\n          const list = resp.data; // Find the user with email\n\n          const user = list.find(x => x.email == this.state.email); // Check the user exist\n\n          if (user != null) {\n            // Check the confirm password and new password must be the same\n            if (this.state.cfPass == this.state.newPass) {\n              // Set new password\n              user.password = this.state.cfPass; // Change password\n\n              axios.put(URL + '/users/' + user.id, user).then(resp => {\n                this.setState({\n                  user: user,\n                  error: null,\n                  email: \"\",\n                  newPass: \"\",\n                  cfPass: \"\",\n                  submitted: false\n                }); // Hide loading\n\n                this.refs.loading.handleLoading(); // Open message box\n\n                this.refs.popup.handlePopup(); // Redirect to sign in page\n\n                setTimeout(() => {\n                  this.refs.popup.handlePopup();\n                  window.location = \"/signIn\";\n                }, 3000);\n              }).catch(error => {\n                // Catch error here\n                this.setState({\n                  error: error\n                }); // Hide loading\n\n                this.refs.loading.handleLoading();\n              });\n            } else {\n              this.setState({\n                error: _objectSpread({}, {\n                  message: \"Confirm password is incorrect\"\n                })\n              }); // Hide loading\n\n              this.refs.loading.handleLoading();\n            }\n          } else {\n            this.setState({\n              error: _objectSpread({}, {\n                message: \"Email doesn't exist\"\n              })\n            }); // Hide loading\n\n            this.refs.loading.handleLoading();\n          }\n        }).catch(error => {\n          // Catch error here\n          this.error = error; // Hide loading\n\n          this.refs.loading.handleLoading();\n        });\n      }, 500);\n    }\n  }\n\n  handleChange(e) {\n    switch (e.target.id) {\n      case 'email':\n        this.setState({\n          email: e.target.value\n        });\n        break;\n\n      case 'newPass':\n        this.setState({\n          newPass: e.target.value\n        });\n        break;\n\n      case 'cfPass':\n        this.setState({\n          cfPass: e.target.value\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          submitted = _this$state.submitted,\n          email = _this$state.email,\n          newPass = _this$state.newPass,\n          cfPass = _this$state.cfPass,\n          error = _this$state.error;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Reset Password\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"input\", {\n      id: \"email\",\n      value: email,\n      type: \"text\",\n      onChange: this.handleChange,\n      placeholder: \"Email\",\n      className: submitted && !email ? \"form-control is-invalid\" : \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"alert-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, submitted && !email && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Email is required\"))), React.createElement(\"div\", {\n      className: \"div-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"newPass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"New password:\"), React.createElement(\"input\", {\n      id: \"newPass\",\n      value: newPass,\n      type: \"password\",\n      onChange: this.handleChange,\n      placeholder: \"New Password\",\n      className: submitted && !newPass ? \"form-control is-invalid\" : \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"alert-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, submitted && !newPass && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"New password is required\"))), React.createElement(\"div\", {\n      className: \"div-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"cfPass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Confirm password:\"), React.createElement(\"input\", {\n      id: \"cfPass\",\n      value: cfPass,\n      type: \"password\",\n      onChange: this.handleChange,\n      placeholder: \"Confirm Password\",\n      className: submitted && !cfPass ? \"form-control is-invalid\" : \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"alert-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, submitted && !cfPass && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Confirm password is required\"))), React.createElement(\"div\", {\n      className: \"div-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/signIn\",\n      className: \"customLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Sign In\")), React.createElement(\"div\", {\n      className: \"alert-box div-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, error != null && error.message != null && React.createElement(Error, {\n      message: error.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"div-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-secondary btn-big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Save\")))), React.createElement(Popup, {\n      ref: \"popup\",\n      message: \"Your password is reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(Loading, {\n      ref: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/jimmybui/Documents/Web&App/example/my_react_login/frontend/src/components/resetPassword.js"],"names":["React","Component","Error","Popup","Loading","axios","Link","URL","validEmail","ResetPassword","constructor","props","state","submitted","email","newPass","cfPass","error","handleLogin","bind","handleChange","e","preventDefault","setState","message","refs","loading","handleLoading","setTimeout","get","then","resp","list","data","user","find","x","password","put","id","popup","handlePopup","window","location","catch","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Error from './error';\nimport Popup from './popup';\nimport Loading from './loading';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { URL } from '../constants/constant';\nimport { validEmail } from '../js/utils.js'\n\nclass ResetPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            submitted: false,\n            email: \"\",\n            newPass: \"\",\n            cfPass: \"\",\n            error: null\n        }\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n        this.setState({\n            submitted: true\n        })\n\n        // Check empty input\n        if(this.state.email && this.state.newPass && this.state.cfPass) {\n            // Check validation of the email\n            if(!validEmail(this.state.email)) {\n                this.setState({\n                    error : {...{message: \"Email is invalid\"}}\n                });\n                return false;\n            }\n\n            this.refs.loading.handleLoading();\n            // Assume the request will be a half of second\n            setTimeout(() => {\n                // Get the list of user\n                axios.get(URL + '/users')\n                .then(resp => {\n                    // Get the list of users\n                    const list = resp.data;\n                    // Find the user with email\n                    const user = list.find(x => x.email == this.state.email);\n                    // Check the user exist\n                    if(user != null) {\n                      // Check the confirm password and new password must be the same\n                      if(this.state.cfPass == this.state.newPass) {\n                        // Set new password\n                        user.password = this.state.cfPass;\n                        // Change password\n                        axios.put(URL + '/users/' + user.id, user)\n                        .then(resp => {\n                            this.setState({\n                                user : user,\n                                error : null,\n                                email : \"\",\n                                newPass : \"\",\n                                cfPass : \"\",\n                                submitted : false\n                            });\n\n                            // Hide loading\n                            this.refs.loading.handleLoading();\n                            // Open message box\n                            this.refs.popup.handlePopup();\n\n                            // Redirect to sign in page\n                            setTimeout(() => {\n                                this.refs.popup.handlePopup();\n                                window.location = \"/signIn\";\n                            }, 3000);\n                        }).catch(error => {\n                            // Catch error here\n                            this.setState({\n                                error : error\n                            });\n                            // Hide loading\n                            this.refs.loading.handleLoading();\n                        });\n                      } else {\n                        this.setState({\n                            error : {...{message: \"Confirm password is incorrect\"}}\n                        });\n                        // Hide loading\n                        this.refs.loading.handleLoading();\n                      }\n                    } else {\n                        this.setState({\n                            error : {...{message: \"Email doesn't exist\"}}\n                        });\n                        // Hide loading\n                        this.refs.loading.handleLoading();\n                    }\n                }).catch(error => {\n                    // Catch error here\n                    this.error = error;\n                    // Hide loading\n                    this.refs.loading.handleLoading();\n                });\n              }, 500);\n        }\n    }\n\n    handleChange(e) {\n        switch(e.target.id) {\n            case 'email': this.setState({\n                email: e.target.value\n            });\n            break;\n            case 'newPass': this.setState({\n                newPass: e.target.value\n            });\n            break;\n            case 'cfPass': this.setState({\n                cfPass: e.target.value\n            });\n            break;\n            default: break;\n        }\n    }\n\n    render() {\n        const { submitted, email, newPass, cfPass, error } = this.state;\n        return (\n            <div className=\"container\">\n                <div className=\"login\">\n                    <h2>Reset Password</h2>\n                    <br/>\n                    <form onSubmit={this.handleLogin}>\n                        <div className=\"div-responsive\">\n                            <label htmlFor=\"email\">Email:</label>\n                            <input id=\"email\" value={email} type=\"text\" onChange={this.handleChange} placeholder=\"Email\" className={(submitted && !email) ? \"form-control is-invalid\" : \"form-control\"} />\n                            <div className=\"alert-field\">\n                                {\n                                    (submitted && !email) && <div className=\"invalid-feedback\">Email is required</div>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"div-responsive\">\n                            <label htmlFor=\"newPass\">New password:</label>\n                            <input id=\"newPass\" value={newPass} type=\"password\" onChange={this.handleChange} placeholder=\"New Password\" className={(submitted && !newPass) ? \"form-control is-invalid\" : \"form-control\"} />\n                            <div className=\"alert-field\">\n                                {\n                                    (submitted && !newPass) && <div className=\"invalid-feedback\">New password is required</div>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"div-responsive\">\n                            <label htmlFor=\"cfPass\">Confirm password:</label>\n                            <input id=\"cfPass\" value={cfPass} type=\"password\" onChange={this.handleChange} placeholder=\"Confirm Password\" className={(submitted && !cfPass) ? \"form-control is-invalid\" : \"form-control\"} />\n                            <div className=\"alert-field\">\n                                {\n                                    (submitted && !cfPass) && <div className=\"invalid-feedback\">Confirm password is required</div>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"div-responsive\">\n                            <Link to=\"/signIn\" className=\"customLink\">Sign In</Link>\n                        </div>\n                        <div className=\"alert-box div-responsive\">\n                            {\n                                (error != null && error.message != null) && <Error message={error.message} />\n                            }\n                        </div>\n                        <div className=\"div-responsive\">\n                            <button type=\"submit\" className=\"btn btn-secondary btn-big\">Save</button>\n                        </div>\n                    </form>\n                </div>\n                <Popup ref=\"popup\" message=\"Your password is reset\" />\n                <Loading ref=\"loading\" />\n            </div>\n        )\n    }\n}\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}